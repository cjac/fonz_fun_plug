diff -urp man-1.6e.orig/catopen/catopen.c man-1.6e/catopen/catopen.c
--- man-1.6e.orig/catopen/catopen.c	2005-08-21 01:26:06.000000000 +0200
+++ man-1.6e/catopen/catopen.c	2008-02-12 10:55:53.000000000 +0100
@@ -6,7 +6,6 @@
 #include <fcntl.h>
 #include <nl_types.h>
 
-extern char *index (const char *, int);         /* not always in <string.h> */
 extern char *my_malloc(int);	/* in util.c */
 
 #ifndef DEFAULT_NLSPATH
@@ -48,7 +47,7 @@ my_catopen(char *name, int oflag) {
     /*
      * "If `name' contains a `/', then `name' specifies a pathname"
      */
-    if (index(name, '/')) {
+    if (strchr(name, '/')) {
 #ifdef __GLIBC__
       /* glibc uses a pointer type for nl_catd, not a fd */
       return fd;
@@ -104,7 +103,7 @@ my_catopenpath(char *name, char *nlspath
   langsz = strlen(lang);
 
   lang_l = lang;
-  s = index(lang_l, '_');
+  s = strchr(lang_l, '_');
   if (!s) {
     lang_t = lang_c = "";
     lang_l_sz = langsz;
@@ -112,7 +111,7 @@ my_catopenpath(char *name, char *nlspath
   } else {
     lang_l_sz = s - lang_l;
     lang_t = s+1;
-    s = index(lang_t, '.');
+    s = strchr(lang_t, '.');
     if (!s) {
       lang_c = "";
       lang_t_sz = langsz - lang_l_sz - 1;
@@ -188,7 +187,7 @@ my_catopenpath(char *name, char *nlspath
   path = path0;
   while(path) {
     file = path;
-    s = index(path, ':');
+    s = strchr(path, ':');
     if (s) {
       *s = 0;
       path = s+1;
diff -urp man-1.6e.orig/src/glob.c man-1.6e/src/glob.c
--- man-1.6e.orig/src/glob.c	2005-08-21 01:26:06.000000000 +0200
+++ man-1.6e/src/glob.c	2008-02-12 10:54:33.000000000 +0100
@@ -92,8 +92,6 @@ extern void free ();
 
 #ifdef STDC_STRINGS
 #define bcopy(s, d, n) memcpy ((d), (s), (n))
-#define index strchr
-#define rindex strrchr
 #endif /* STDC_STRINGS */
 
 #ifndef	alloca
@@ -507,7 +505,7 @@ glob_filename (const char *pathname)
   result[0] = NULL;
 
   /* Find the filename.  */
-  filename = rindex (pathname, '/');
+  filename = strrchr (pathname, '/');
   if (filename == NULL)
     {
       filename = pathname;
diff -urp man-1.6e.orig/src/makemsg.c man-1.6e/src/makemsg.c
--- man-1.6e.orig/src/makemsg.c	2006-08-02 20:11:44.000000000 +0200
+++ man-1.6e/src/makemsg.c	2008-02-12 10:52:10.000000000 +0100
@@ -23,8 +23,6 @@
 #ifdef __QNX__
 #include <unix.h>
 #endif
-extern char *index(const char *, int);
-extern char *rindex(const char *, int);
 
 #define BUFSIZE 4096
 
@@ -78,12 +76,12 @@ main(int argc, char **argv) {
 
     /* help people not to confuse the order of these args */
     if (!makecat) {
-	s = rindex(outhfile, '.');
+	s = strrchr(outhfile, '.');
 	if (!s || s[1] != 'h') {
 	    fprintf (stderr, "defines output file should have name ending in .h\n");
 	    usage ();
 	}
-	s = rindex(outcfile, '.');
+	s = strrchr(outcfile, '.');
 	if (!s || s[1] != 'c') {
 	    fprintf (stderr, "string output file should have name ending in .c\n");
 	    usage ();
@@ -146,7 +144,7 @@ main(int argc, char **argv) {
 	}
 
 	/* output string - it may extend over several lines */
-	while ((t = index(s, '\n')) == NULL || (t > buf && t[-1] == '\\')) {
+	while ((t = strchr(s, '\n')) == NULL || (t > buf && t[-1] == '\\')) {
 	    fputs (s, foc);
 	    getbuf;
 	    s = buf;
diff -urp man-1.6e.orig/src/man-config.c man-1.6e/src/man-config.c
--- man-1.6e.orig/src/man-config.c	2005-08-21 01:26:06.000000000 +0200
+++ man-1.6e/src/man-config.c	2008-02-12 10:52:22.000000000 +0100
@@ -35,8 +35,6 @@
 
 #define BUFSIZE 4096
 
-extern char *rindex (const char *, int);	/* not always in <string.h> */
-
 #define whitespace(x) ((x) == ' ' || (x) == '\t')
 
 /* directories listed in config file */
@@ -141,7 +139,7 @@ addglobdir (const char *bp, int mandator
 		bp++;
 
 	dir = bp;
-	if (index(dir, '*') || index(dir, '?') || index(dir, '[')) {
+	if (strchr(dir, '*') || strchr(dir, '?') || strchr(dir, '[')) {
 		char **dp = glob_filename (dir);
 
 		if (dp && dp != (char **) -1) {
@@ -194,11 +192,11 @@ get_expander (const char *file) {
 	  /* For man1.Z/file.1 let extp=".Z" */
 	  /* For .1 return NULL */
 	  int len = strlen (dohp);
-	  char *dirname_end = rindex (file, '/');
+	  char *dirname_end = strrchr (file, '/');
 	  if (dirname_end && !strncmp (dirname_end-len, dohp, len))
 	      extp = dohp;
      } else
-	  extp = rindex (file, '.');
+	  extp = strrchr (file, '.');
      if (extp != NULL) {
 	  if (uncompressors.nxt) {
 	       for (xp = uncompressors.nxt; xp; xp = xp->nxt)
diff -urp man-1.6e.orig/src/man.c man-1.6e/src/man.c
--- man-1.6e.orig/src/man.c	2006-05-01 22:34:22.000000000 +0200
+++ man-1.6e/src/man.c	2008-02-12 10:53:00.000000000 +0100
@@ -38,9 +38,6 @@
 #define R_OK 4
 #endif
 
-extern char *index (const char *, int);		/* not always in <string.h> */
-extern char *rindex (const char *, int);	/* not always in <string.h> */
-
 #include "defs.h"
 #include "gripes.h"
 #include "man.h"
@@ -212,7 +209,7 @@ remove_other_catfiles (const char *catfi
      int offset;
 
      pathname = my_strdup(catfile);
-     t = rindex(pathname, '.');
+     t = strrchr(pathname, '.');
      if (t == NULL || strcmp(t, getval("COMPRESS_EXT")))
 	  return;
      offset = t - pathname;
@@ -351,7 +348,7 @@ again:
      } else {
 	  fp = fopen (name, "r");
 	  if (fp == NULL && expfl) {
-	       char *extp = rindex (name0, '.');
+	       char *extp = strrchr (name0, '.');
 	       if (extp && *extp && strlen(name)+strlen(extp) < BUFSIZE) {
 		    strcat(name, extp);
 		    fp = fopen (name, "r");
@@ -397,12 +394,12 @@ again:
 
      /* If name ends in path/manx/foo.9x then use path, otherwise
 	try same directory. */
-     if ((cp = rindex(name, '/')) == NULL) /* very strange ... */
+     if ((cp = strrchr(name, '/')) == NULL) /* very strange ... */
 	  return 0;
      *cp = 0;
 
      /* allow "man ./foo.3" where foo.3 contains ".so man2/bar.2" */
-     if ((cp = rindex(name, '/')) != NULL && !strcmp(cp+1, "."))
+     if ((cp = strrchr(name, '/')) != NULL && !strcmp(cp+1, "."))
 	  *cp = 0;
 
      /* In all cases, the new name will be something from name
@@ -410,13 +407,13 @@ again:
      if (strlen(name) + strlen(beg) + 1 >= BUFSIZ)
 	  return 0;		/* very long names, ignore */
 
-     if (!index(beg, '/')) {
+     if (!strchr(beg, '/')) {
 	  /* strange.. try same directory as the .so file */
 	  strcat(name, "/");
 	  strcat(name, beg);
-     } else if((cp = rindex(name, '/')) != NULL && !strncmp(cp+1, "man", 3)) {
+     } else if((cp = strrchr(name, '/')) != NULL && !strncmp(cp+1, "man", 3)) {
 	  strcpy(cp+1, beg);
-     } else if((cp = rindex(beg, '/')) != NULL) {
+     } else if((cp = strrchr(beg, '/')) != NULL) {
 	  strcat(name, cp);
      } else {
 	  strcat(name, "/");
@@ -981,7 +978,7 @@ man (const char *name, const char *secti
      found = 0;
 
      /* allow  man ./manpage  for formatting explicitly given man pages */
-     if (index(name, '/')) {
+     if (strchr(name, '/')) {
 	  char fullname[BUFSIZE];
 	  char fullpath[BUFSIZE];
 	  char *path;
@@ -1005,7 +1002,7 @@ man (const char *name, const char *secti
 	  }
 
 	  strcpy (fullpath, fullname);
-	  if ((cp = rindex(fullpath, '/')) != NULL
+	  if ((cp = strrchr(fullpath, '/')) != NULL
 	      && cp-fullpath+4 < sizeof(fullpath)) {
 	       strcpy(cp+1, "..");
 	       path = fullpath;
@@ -1165,13 +1162,13 @@ do_global_apropos (char *name, char *sec
 			      answer = c = getchar();
 			      while (c != '\n' && c != EOF)
 				   c = getchar();
-			      if(index("QqXx", answer))
+			      if(strchr("QqXx", answer))
 				   exit(0);
-			      if(index("YyJj", answer)) {
+			      if(strchr("YyJj", answer)) {
 				   char *ri;
 
 				   strcpy(path, *gf);
-				   ri = rindex(path, '/');
+				   ri = strrchr(path, '/');
 				   if (ri)
 					*ri = 0;
 				   format_and_display(*gf);
diff -urp man-1.6e.orig/src/manpath.c man-1.6e/src/manpath.c
--- man-1.6e.orig/src/manpath.c	2006-08-03 23:18:33.000000000 +0200
+++ man-1.6e/src/manpath.c	2008-02-12 10:53:23.000000000 +0100
@@ -28,8 +28,8 @@
 #include <sys/stat.h>
 
 /* not always in <string.h> */
-extern char *index(const char *, int);
-extern char *rindex(const char *, int);
+extern char *strchr(const char *, int);
+extern char *strrchr(const char *, int);
 
 #include "defs.h"
 #include "gripes.h"
@@ -54,8 +54,8 @@ split (char *string, void (*fn)(char *, 
      if (string) {
           p = my_strdup(string);
 	  for (q = p; ; ) {
-               if ((r = index(q, ':'))==(char*)0) 
-                    r=index(q,'\01');
+               if ((r = strchr(q, ':'))==(char*)0) 
+                    r=strchr(q,'\01');
 	       if (r) {
 		    *r = 0;
 		    fn (q, perrs);
@@ -76,7 +76,7 @@ split2 (char *s, char *string, void (*fn
      if (string) {
           p = my_strdup(string);
 	  for (q = p; ; ) {
-	       r = index(q, ':');
+	       r = strchr(q, ':');
 	       if (r) {
 		    *r = 0;
 		    fn (s, q, perrs);
@@ -130,7 +130,7 @@ find_man_subdir (char *p) {
 
      /* find parent directory */
      t[len] = 0;
-     if ((sp = rindex (t, '/')) != NULL) {
+     if ((sp = strrchr (t, '/')) != NULL) {
 	  *sp = 0;
 	  len = sp - t;
      } else {
@@ -187,7 +187,7 @@ add_to_list (char *dir, char *lang, int 
 	  if (!strncmp (dir, "./", 2))
 	       dir += 2;
 	  while (!strncmp (dir, "../", 3)) {
-	       char *p = rindex (cwd, '/');
+	       char *p = strrchr (cwd, '/');
 	       if (p > cwd)
 		       *p = 0;
 	       else
diff -urp man-1.6e.orig/src/to_cat.c man-1.6e/src/to_cat.c
--- man-1.6e.orig/src/to_cat.c	2005-08-21 01:26:06.000000000 +0200
+++ man-1.6e/src/to_cat.c	2008-02-12 10:53:56.000000000 +0100
@@ -2,8 +2,6 @@
 #include <stdlib.h>
 #include <string.h>
 
-extern char *rindex (const char *, int);	/* not always in <string.h> */
-
 #include "defs.h"
 #include "manfile.h"
 #include "man-config.h"
@@ -66,7 +64,7 @@ convert_to_cat (const char *name0, const
 
      freename = name = my_strdup (name0);
 
-     t0 = rindex (name, '.');
+     t0 = strrchr (name, '.');
      if (t0 && get_expander(t0)) /* remove compressee extension */
 	  *t0 = 0;
 
@@ -102,7 +100,7 @@ convert_to_cat (const char *name0, const
 
 	  /* possibly strip locale part */
 	  t3 = t2;
-	  if ((t4 = rindex(name,'/')) != NULL && strcmp(t4, "/man")) {
+	  if ((t4 = strrchr(name,'/')) != NULL && strcmp(t4, "/man")) {
 	       *t3 = '/';
 	       t3 = t4;
 	       *t3 = 0;
@@ -132,7 +130,7 @@ convert_to_cat (const char *name0, const
      if ((standards & FSSTND) && !strncmp(name, "/usr/", 5)) {
 	  /* search, starting at the end, for a part `man' to delete */
 	  t3 = t2;
-	  while ((t4 = rindex(name, '/')) != NULL && strcmp(t4, "/man")) {
+	  while ((t4 = strrchr(name, '/')) != NULL && strcmp(t4, "/man")) {
 	       *t3 = '/';
 	       t3 = t4;
 	       *t3 = 0;
